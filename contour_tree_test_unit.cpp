#include <iostream>
#include <vector>
#include "terrain.h"
#include "vertex.h"
#include "contour_tree.h"
#include "./dynamic-tree/link_cut_tree.h"
#include "./dynamic-tree/statistics.h"
using namespace std;

typedef NaiveVertex<double> V;
typedef StarGridTerrain<V> T;
typedef typename std::reference_wrapper<const V> VertexRef;
typedef Vertex2D<double> EV;
typedef EdgeTerrain<EV> ET;
typedef typename std::reference_wrapper<const EV> EdgeVertexRef;

template <class T>
void InputTest(const vector< vector<T> > & mat) {
	for (auto row : mat) {
		assert(row.size() == mat[0].size());
	}
	for (size_t i = 0 ; i < mat.size() ; i++){
		for (size_t j = 0 ; j < mat[i].size() ; j++){
			for (size_t k = 0 ; k < mat.size() ; k++) {
				for (size_t l = 0 ; l < mat[k].size() ; l++) {
					if (i == k && j == l) continue;
					if (mat[i][j] == mat[k][l]) {
						std::cout <<  "(" << i << "," << j << ") == (" << k << "," << l << ")" << std::endl;
					}
					assert(mat[i][j] != mat[k][l]);
				}
			}
		}
	}
}

void ALine() {
	vector< vector<double> > mat = { 
		{0, 1, 2, 3, 4},
		{5, 6, 7, 8, 9},
		{10, 11, 12, 13, 14},
		{15, 16, 17, 18, 19},
		{20, 21, 22, 23, 24}
	};
	T t(mat);
	MergeTree<T> mt(t);
	mt.Print();
	SplitTree<T> st(t);
	st.Print();
}

void ASaddle() {
	vector< vector<double> > mat = { 
		{0, 1, 7},
		{8, 5, 3},
		{6, 4, 2}
	};
	T t(mat);
	MergeTree<T> mt(t);
	mt.Print();
	SplitTree<T> st(t);
	st.Print();
}

void TwoTwo() {
	vector< vector<double> > mat = {
		{8, 7, 6, 5, 4},
		{9, 0, 2, 1, 3},
		{10, 11, 12, 13, 14},
		{21, 24, 22, 23, 15},
		{20, 19, 18, 17, 16}
	};
	T t(mat);
	MergeTree<T> mt(t);
	mt.Print();
	SplitTree<T> st(t);
	st.Print();
	ContourTree< LinkCutTree<VertexRef, Statistic, true>, T > ct(mt,st);
	ct.Print();
}

void TwoTwoEdge() {
	vector<double> mat = {
		8, 7, 6, 5, 4,
		9, 0, 2, 1, 3,
		10, 11, 12, 13, 14,
		21, 24, 22, 23, 15,
		20, 19, 18, 17, 16
	};
	vector< EV > points;
	vector< pair<size_t, size_t> > edges;
	for (size_t i = 0 ; i < mat.size() ; i++) {
		points.push_back(EV(i%5, i/5, mat[i]));

		size_t t;
		if (i % 2 == 0) { // diagonal
			t = i - 6;
			if (t < mat.size() && t/5+1 == i/5) edges.push_back(make_pair(i, t));
			t = i - 4;
			if (t < mat.size() && t/5 != i/5) edges.push_back(make_pair(i, t));
			t = i + 4;
			if (t < mat.size() && t/5 != i/5) edges.push_back(make_pair(i, t));
			t = i + 6;
			if (t < mat.size() && t/5-1 == i/5) edges.push_back(make_pair(i, t));
		}
		t = i - 5;
		if (t < mat.size()) edges.push_back(make_pair(i, t));
		t = i - 1;
		if (t < mat.size() && t/5 == i/5) edges.push_back(make_pair(i, t));
		t = i + 1;
		if (t < mat.size() && t/5 == i/5) edges.push_back(make_pair(i, t));
		t = i + 5;
		if (t < mat.size()) edges.push_back(make_pair(i, t));
	}
	std::cout << edges.size() << std::endl;

	ET t(points, edges);
	MergeTree<ET> mt(t);
	mt.Print();
	SplitTree<ET> st(t);
	st.Print();
	ContourTree< LinkCutTree<EdgeVertexRef, Statistic, true>, ET > ct(mt,st);
	ct.Print();
}

void Complex() {
	vector< EV > points = {
		EV( 1.0 , -1.0 , 0.0 ),EV( -1.0 , -1.0 , 0.0 ),EV( 1.0 , 1.0 , 0.0 ),EV( -1.0 , 1.0 , 0.0 ),EV( 0.0 , -1.0 , 0.0 ),EV( 0.0 , 1.0 , 0.0 ),EV( 1.0 , 0.0 , 0.0 ),EV( -1.0 , 0.0 , 0.0 ),EV( 0.0 , 0.0 , 0.08178125321865082 ),EV( -0.5 , -1.0 , 0.0 ),EV( -0.5 , 1.0 , 0.0 ),EV( 1.0 , 0.5 , 0.0 ),EV( -1.0 , -0.5 , 0.0 ),EV( 0.5 , -1.0 , 0.0 ),EV( 0.5 , 1.0 , 0.0 ),EV( 1.0 , -0.5 , 0.0 ),EV( -1.0 , 0.5 , 0.0 ),EV( 0.0 , 0.5 , 0.359936386346817 ),EV( 0.0 , -0.5 , -0.14327633380889893 ),EV( -0.5 , 0.0 , -0.01670474372804165 ),EV( 0.5 , 0.0 , -0.04860556498169899 ),EV( 0.5 , 0.5 , 0.29116684198379517 ),EV( -0.5 , 0.5 , 0.20043149590492249 ),EV( -0.5 , -0.5 , -0.3052164316177368 ),EV( 0.5 , -0.5 , -0.5251312851905823 ),EV( -0.75 , -1.0 , 0.0 ),EV( -0.75 , 1.0 , 0.0 ),EV( 1.0 , 0.75 , 0.0 ),EV( -1.0 , -0.75 , 0.0 ),EV( 0.75 , -1.0 , 0.0 ),EV( 0.75 , 1.0 , 0.0 ),EV( 1.0 , -0.75 , 0.0 ),EV( -1.0 , 0.75 , 0.0 ),EV( 0.0 , 0.75 , 0.007279734127223492 ),EV( 0.0 , -0.75 , -0.001959627727046609 ),EV( -0.75 , 0.0 , 0.0 ),EV( 0.25 , 0.0 , 0.04691396653652191 ),EV( -0.25 , -1.0 , 0.0 ),EV( -0.25 , 1.0 , 0.0 ),EV( 1.0 , 0.25 , 0.0 ),EV( -1.0 , -0.25 , 0.0 ),EV( 0.25 , -1.0 , 0.0 ),EV( 0.25 , 1.0 , 0.0 ),EV( 1.0 , -0.25 , 0.0 ),EV( -1.0 , 0.25 , 0.0 ),EV( 0.0 , 0.25 , 0.359936386346817 ),EV( 0.0 , -0.25 , -0.12311384081840515 ),EV( -0.25 , 0.0 , 0.03293249011039734 ),EV( 0.75 , 0.0 , 0.0 ),EV( 0.5 , 0.75 , 0.0754023939371109 ),EV( 0.5 , 0.25 , 0.3017478585243225 ),EV( 0.25 , 0.5 , 0.5580923557281494 ),EV( 0.75 , 0.5 , 0.0 ),EV( -0.5 , 0.75 , 0.0029436920303851366 ),EV( -0.5 , 0.25 , 0.20043149590492249 ),EV( -0.75 , 0.5 , 0.0 ),EV( -0.25 , 0.5 , 0.4584866464138031 ),EV( -0.5 , -0.25 , -0.2359490841627121 ),EV( -0.5 , -0.75 , -0.13342806696891785 ),EV( -0.75 , -0.5 , -0.03966037556529045 ),EV( -0.25 , -0.5 , -0.32153138518333435 ),EV( 0.5 , -0.25 , -0.5251312851905823 ),EV( 0.5 , -0.75 , -0.05297711119055748 ),EV( 0.25 , -0.5 , -0.5251312851905823 ),EV( 0.75 , -0.5 , -0.05297711119055748 ),EV( 0.75 , 0.75 , 0.005125636700540781 ),EV( -0.25 , 0.75 , 0.05957658588886261 ),EV( -0.25 , -0.25 , -0.2640224099159241 ),EV( 0.75 , -0.25 , -0.05297711119055748 ),EV( 0.25 , 0.75 , 0.08783850818872452 ),EV( 0.25 , 0.25 , 0.5552565455436707 ),EV( 0.75 , 0.25 , 0.0 ),EV( -0.75 , 0.75 , 0.0 ),EV( -0.75 , 0.25 , 0.0 ),EV( -0.25 , 0.25 , 0.4584866464138031 ),EV( -0.75 , -0.25 , -0.001959627727046609 ),EV( -0.75 , -0.75 , -0.017458278685808182 ),EV( -0.25 , -0.75 , -0.13342806696891785 ),EV( 0.25 , -0.25 , -0.5251312851905823 ),EV( 0.25 , -0.75 , -0.05297711119055748 ),EV( 0.75 , -0.75 , 0.0 ),EV( -0.875 , -1.0 , 0.0 ),EV( -0.875 , 1.0 , 0.0 ),EV( 1.0 , 0.875 , 0.0 ),EV( -1.0 , -0.875 , 0.0 ),EV( 0.875 , -1.0 , 0.0 ),EV( 0.875 , 1.0 , 0.0 ),EV( 1.0 , -0.875 , 0.0 ),EV( -1.0 , 0.875 , 0.0 ),EV( 0.0 , 0.875 , 0.0 ),EV( 0.0 , -0.875 , 0.0 ),EV( -0.875 , 0.0 , 0.0 ),EV( 0.125 , 0.0 , 0.05481341481208801 ),EV( -0.125 , -1.0 , 0.0 ),EV( -0.125 , 1.0 , 0.0 ),EV( 1.0 , 0.125 , 0.0 ),EV( -1.0 , -0.125 , 0.0 ),EV( 0.125 , -1.0 , 0.0 ),EV( 0.125 , 1.0 , 0.0 ),EV( 1.0 , -0.125 , 0.0 ),EV( -1.0 , 0.125 , 0.0 ),EV( 0.0 , 0.125 , 0.19352059066295624 ),EV( 0.0 , -0.125 , -0.04889810085296631 ),EV( -0.125 , 0.0 , 0.01877780258655548 ),EV( 0.875 , 0.0 , 0.0 ),EV( 0.5 , 0.875 , 0.0012201450299471617 ),EV( 0.5 , 0.125 , 0.12695883214473724 ),EV( 0.125 , 0.5 , 0.5391031503677368 ),EV( 0.625 , 0.5 , 0.06077646091580391 ),EV( -0.5 , 0.875 , 0.0 ),EV( -0.5 , 0.125 , 0.08611000329256058 ),EV( -0.875 , 0.5 , 0.0 ),EV( -0.375 , 0.5 , 0.37907880544662476 ),EV( -0.5 , -0.125 , -0.09288914501667023 ),EV( -0.5 , -0.875 , -0.025458401069045067 ),EV( -0.875 , -0.5 , 0.0 ),EV( -0.375 , -0.5 , -0.3579093813896179 ),EV( 0.5 , -0.125 , -0.2776542603969574 ),EV( 0.5 , -0.875 , 0.0 ),EV( 0.125 , -0.5 , -0.2744356393814087 ),EV( 0.625 , -0.5 , -0.2776542603969574 ),EV( -0.625 , -1.0 , 0.0 ),EV( -0.625 , 1.0 , 0.0 ),EV( 1.0 , 0.625 , 0.0 ),EV( -1.0 , -0.625 , 0.0 ),EV( 0.625 , -1.0 , 0.0 ),EV( 0.625 , 1.0 , 0.0 ),EV( 1.0 , -0.625 , 0.0 ),EV( -1.0 , 0.625 , 0.0 ),EV( 0.0 , 0.625 , 0.19352059066295624 ),EV( 0.0 , -0.625 , -0.06055135279893875 ),EV( -0.625 , 0.0 , -0.00021053495584055781 ),EV( 0.375 , 0.0 , -0.019562024623155594 ),EV( -0.375 , -1.0 , 0.0 ),EV( -0.375 , 1.0 , 0.0 ),EV( 1.0 , 0.375 , 0.0 ),EV( -1.0 , -0.375 , 0.0 ),EV( 0.375 , -1.0 , 0.0 ),EV( 0.375 , 1.0 , 0.0 ),EV( 1.0 , -0.375 , 0.0 ),EV( -1.0 , 0.375 , 0.0 ),EV( 0.0 , 0.375 , 0.41189590096473694 ),EV( 0.0 , -0.375 , -0.189130499958992 ),EV( -0.375 , 0.0 , 0.007814011536538601 ),EV( 0.625 , 0.0 , -0.004077845718711615 ),EV( 0.5 , 0.625 , 0.1475362628698349 ),EV( 0.5 , 0.375 , 0.2515537738800049 ),EV( 0.375 , 0.5 , 0.4736495614051819 ),EV( 0.875 , 0.5 , 0.0 ),EV( -0.5 , 0.625 , 0.08611000329256058 ),EV( -0.5 , 0.375 , 0.251742959022522 ),EV( -0.625 , 0.5 , 0.03824282065033913 ),EV( -0.125 , 0.5 , 0.38261058926582336 ),EV( -0.5 , -0.375 , -0.2597047984600067 ),EV( -0.5 , -0.625 , -0.25235432386398315 ),EV( -0.625 , -0.5 , -0.1675863116979599 ),EV( -0.125 , -0.5 , -0.21487298607826233 ),EV( 0.5 , -0.375 , -0.6060797572135925 ),EV( 0.5 , -0.625 , -0.2776542603969574 ),EV( 0.375 , -0.5 , -0.6060797572135925 ),EV( 0.875 , -0.5 , 0.0 ),EV( 0.75 , 0.875 , 0.0 ),EV( 0.75 , 0.625 , 0.009702859446406364 ),EV( 0.625 , 0.75 , 0.04266609251499176 ),EV( 0.875 , 0.75 , 0.0 ),EV( -0.25 , 0.875 , 0.0 ),EV( -0.25 , 0.625 , 0.251742959022522 ),EV( -0.375 , 0.75 , 0.03824282065033913 ),EV( -0.125 , 0.75 , 0.03824282065033913 ),EV( -0.25 , -0.125 , -0.11190315335988998 ),EV( -0.25 , -0.375 , -0.2997684180736542 ),EV( -0.375 , -0.25 , -0.20897480845451355 ),EV( -0.125 , -0.25 , -0.1772482842206955 ),EV( 0.75 , -0.125 , -0.004077845718711615 ),EV( 0.75 , -0.375 , -0.08253040909767151 ),EV( 0.625 , -0.25 , -0.2776542603969574 ),EV( 0.875 , -0.25 , 0.0 ),EV( 0.25 , 0.875 , 0.0 ),EV( 0.25 , 0.625 , 0.3711646795272827 ),EV( 0.125 , 0.75 , 0.056384433060884476 ),EV( 0.375 , 0.75 , 0.05646933987736702 ),EV( 0.25 , 0.375 , 0.6028670072555542 ),EV( 0.25 , 0.125 , 0.3711646795272827 ),EV( 0.125 , 0.25 , 0.5389920473098755 ),EV( 0.375 , 0.25 , 0.39041054248809814 ),EV( 0.75 , 0.375 , 0.0 ),EV( 0.75 , 0.125 , 0.0 ),EV( 0.625 , 0.25 , 0.056384433060884476 ),EV( 0.875 , 0.25 , 0.0 ),EV( -0.75 , 0.875 , 0.0 ),EV( -0.75 , 0.625 , 0.0 ),EV( -0.875 , 0.75 , 0.0 ),EV( -0.625 , 0.75 , 0.0 ),EV( -0.75 , 0.375 , 0.0 ),EV( -0.75 , 0.125 , 0.0 ),EV( -0.875 , 0.25 , 0.0 ),EV( -0.625 , 0.25 , 0.03824282065033913 ),EV( -0.25 , 0.375 , 0.5551115274429321 ),EV( -0.25 , 0.125 , 0.251742959022522 ),EV( -0.375 , 0.25 , 0.37907880544662476 ),EV( -0.125 , 0.25 , 0.38261058926582336 ),EV( -0.75 , -0.125 , 0.0 ),EV( -0.75 , -0.375 , -0.025458401069045067 ),EV( -0.875 , -0.25 , 0.0 ),EV( -0.625 , -0.25 , -0.0859307125210762 ),EV( -0.75 , -0.625 , -0.025458401069045067 ),EV( -0.75 , -0.875 , -0.00721332710236311 ),EV( -0.875 , -0.75 , 0.0 ),EV( -0.625 , -0.75 , -0.05732377991080284 ),EV( -0.25 , -0.625 , -0.25257018208503723 ),EV( -0.25 , -0.875 , -0.025458401069045067 ),EV( -0.375 , -0.75 , -0.1675863116979599 ),EV( -0.125 , -0.75 , -0.05732377991080284 ),EV( 0.25 , -0.125 , -0.2776542603969574 ),EV( 0.25 , -0.375 , -0.6060797572135925 ),EV( 0.125 , -0.25 , -0.2818135619163513 ),EV( 0.375 , -0.25 , -0.6060797572135925 ),EV( 0.25 , -0.625 , -0.2776542603969574 ),EV( 0.25 , -0.875 , 0.0 ),EV( 0.125 , -0.75 , -0.004077845718711615 ),EV( 0.375 , -0.75 , -0.08253040909767151 ),EV( 0.75 , -0.625 , -0.004077845718711615 ),EV( 0.75 , -0.875 , 0.0 ),EV( 0.625 , -0.75 , -0.004077845718711615 ),EV( 0.875 , -0.75 , 0.0 ),EV( 0.875 , 0.875 , 0.0 ),EV( -0.125 , 0.875 , 0.0 ),EV( -0.125 , -0.125 , -0.07543837279081345 ),EV( 0.875 , -0.125 , 0.0 ),EV( 0.375 , 0.875 , 0.0 ),EV( 0.375 , 0.375 , 0.049847185611724854 ),EV( 0.875 , 0.375 , 0.0 ),EV( -0.625 , 0.875 , 0.0 ),EV( -0.625 , 0.375 , 0.05957658588886261 ),EV( -0.125 , 0.375 , 0.46703431010246277 ),EV( -0.625 , -0.125 , -0.005013089161366224 ),EV( -0.625 , -0.625 , -0.13342806696891785 ),EV( -0.125 , -0.625 , -0.1537659764289856 ),EV( 0.375 , -0.125 , -0.34873512387275696 ),EV( 0.375 , -0.625 , -0.34873512387275696 ),EV( 0.875 , -0.625 , 0.0 ),EV( 0.625 , 0.875 , 0.005125636700540781 ),EV( 0.625 , 0.625 , 0.06374459713697433 ),EV( 0.875 , 0.625 , 0.0 ),EV( -0.375 , 0.875 , 0.0 ),EV( -0.375 , 0.625 , 0.20043149590492249 ),EV( -0.125 , 0.625 , 0.20043149590492249 ),EV( -0.375 , -0.125 , -0.11301682144403458 ),EV( -0.375 , -0.375 , -0.10388321429491043 ),EV( -0.125 , -0.375 , -0.2200356274843216 ),EV( 0.625 , -0.125 , -0.1192866861820221 ),EV( 0.625 , -0.375 , -0.34873512387275696 ),EV( 0.875 , -0.375 , 0.0 ),EV( 0.125 , 0.875 , 0.0 ),EV( 0.125 , 0.625 , 0.29841673374176025 ),EV( 0.375 , 0.625 , 0.2955121099948883 ),EV( 0.125 , 0.375 , 0.559255838394165 ),EV( 0.125 , 0.125 , 0.29841673374176025 ),EV( 0.375 , 0.125 , 0.30950507521629333 ),EV( 0.625 , 0.375 , 0.08783850818872452 ),EV( 0.625 , 0.125 , 0.004340119659900665 ),EV( 0.875 , 0.125 , 0.0 ),EV( -0.875 , 0.875 , 0.0 ),EV( -0.875 , 0.625 , 0.0 ),EV( -0.625 , 0.625 , 0.0029436920303851366 ),EV( -0.875 , 0.375 , 0.0 ),EV( -0.875 , 0.125 , 0.0 ),EV( -0.625 , 0.125 , 0.0029436920303851366 ),EV( -0.375 , 0.375 , 0.4584866464138031 ),EV( -0.375 , 0.125 , 0.20043149590492249 ),EV( -0.125 , 0.125 , 0.20043149590492249 ),EV( -0.875 , -0.125 , 0.0 ),EV( -0.875 , -0.375 , 0.0 ),EV( -0.625 , -0.375 , -0.1462562382221222 ),EV( -0.875 , -0.625 , 0.0 ),EV( -0.875 , -0.875 , 0.0 ),EV( -0.625 , -0.875 , -0.001959627727046609 ),EV( -0.375 , -0.625 , -0.3052164316177368 ),EV( -0.375 , -0.875 , -0.03966037556529045 ),EV( -0.125 , -0.875 , -0.001959627727046609 ),EV( 0.125 , -0.125 , -0.14020541310310364 ),EV( 0.125 , -0.375 , -0.29793375730514526 ),EV( 0.375 , -0.375 , -0.6765334606170654 ),EV( 0.125 , -0.625 , -0.14172019064426422 ),EV( 0.125 , -0.875 , 0.0 ),EV( 0.375 , -0.875 , 0.0 ),EV( 0.625 , -0.625 , -0.1192866861820221 ),EV( 0.625 , -0.875 , 0.0 ),EV( 0.875 , -0.875 , 0.0 )
	};
	vector<pair<size_t,size_t> > edges = {
		make_pair( 81 , 1 ),make_pair( 82 , 3 ),make_pair( 83 , 2 ),make_pair( 84 , 1 ),make_pair( 85 , 0 ),make_pair( 86 , 2 ),make_pair( 87 , 0 ),make_pair( 88 , 3 ),make_pair( 89 , 5 ),make_pair( 90 , 4 ),make_pair( 91 , 7 ),make_pair( 92 , 8 ),make_pair( 93 , 4 ),make_pair( 94 , 5 ),make_pair( 95 , 6 ),make_pair( 96 , 7 ),make_pair( 97 , 4 ),make_pair( 98 , 5 ),make_pair( 99 , 6 ),make_pair( 100 , 7 ),make_pair( 101 , 8 ),make_pair( 102 , 8 ),make_pair( 103 , 8 ),make_pair( 104 , 6 ),make_pair( 105 , 14 ),make_pair( 106 , 20 ),make_pair( 107 , 17 ),make_pair( 108 , 21 ),make_pair( 109 , 10 ),make_pair( 110 , 19 ),make_pair( 111 , 16 ),make_pair( 112 , 22 ),make_pair( 113 , 19 ),make_pair( 114 , 9 ),make_pair( 115 , 12 ),make_pair( 116 , 23 ),make_pair( 117 , 20 ),make_pair( 118 , 13 ),make_pair( 119 , 18 ),make_pair( 120 , 24 ),make_pair( 121 , 9 ),make_pair( 122 , 10 ),make_pair( 123 , 11 ),make_pair( 124 , 12 ),make_pair( 125 , 13 ),make_pair( 126 , 14 ),make_pair( 127 , 15 ),make_pair( 128 , 16 ),make_pair( 129 , 17 ),make_pair( 130 , 18 ),make_pair( 131 , 19 ),make_pair( 132 , 20 ),make_pair( 133 , 9 ),make_pair( 134 , 10 ),make_pair( 135 , 11 ),make_pair( 136 , 12 ),make_pair( 137 , 13 ),make_pair( 138 , 14 ),make_pair( 139 , 15 ),make_pair( 140 , 16 ),make_pair( 141 , 17 ),make_pair( 142 , 18 ),make_pair( 143 , 19 ),make_pair( 144 , 20 ),make_pair( 145 , 21 ),make_pair( 146 , 21 ),make_pair( 147 , 21 ),make_pair( 148 , 11 ),make_pair( 149 , 22 ),make_pair( 150 , 22 ),make_pair( 151 , 22 ),make_pair( 152 , 17 ),make_pair( 153 , 23 ),make_pair( 154 , 23 ),make_pair( 155 , 23 ),make_pair( 156 , 18 ),make_pair( 157 , 24 ),make_pair( 158 , 24 ),make_pair( 159 , 24 ),make_pair( 160 , 15 ),make_pair( 161 , 30 ),make_pair( 162 , 52 ),make_pair( 163 , 49 ),make_pair( 164 , 65 ),make_pair( 165 , 38 ),make_pair( 166 , 56 ),make_pair( 167 , 53 ),make_pair( 168 , 66 ),make_pair( 169 , 47 ),make_pair( 170 , 60 ),make_pair( 171 , 57 ),make_pair( 172 , 67 ),make_pair( 173 , 48 ),make_pair( 174 , 64 ),make_pair( 175 , 61 ),make_pair( 176 , 68 ),make_pair( 177 , 42 ),make_pair( 178 , 51 ),make_pair( 179 , 33 ),make_pair( 180 , 69 ),make_pair( 181 , 51 ),make_pair( 182 , 36 ),make_pair( 183 , 45 ),make_pair( 184 , 70 ),make_pair( 185 , 52 ),make_pair( 186 , 48 ),make_pair( 187 , 50 ),make_pair( 188 , 71 ),make_pair( 189 , 26 ),make_pair( 190 , 55 ),make_pair( 191 , 32 ),make_pair( 192 , 72 ),make_pair( 193 , 55 ),make_pair( 194 , 35 ),make_pair( 195 , 44 ),make_pair( 196 , 73 ),make_pair( 197 , 56 ),make_pair( 198 , 47 ),make_pair( 199 , 54 ),make_pair( 200 , 74 ),make_pair( 201 , 35 ),make_pair( 202 , 59 ),make_pair( 203 , 40 ),make_pair( 204 , 75 ),make_pair( 205 , 59 ),make_pair( 206 , 25 ),make_pair( 207 , 28 ),make_pair( 208 , 76 ),make_pair( 209 , 60 ),make_pair( 210 , 37 ),make_pair( 211 , 58 ),make_pair( 212 , 77 ),make_pair( 213 , 36 ),make_pair( 214 , 63 ),make_pair( 215 , 46 ),make_pair( 216 , 78 ),make_pair( 217 , 63 ),make_pair( 218 , 41 ),make_pair( 219 , 34 ),make_pair( 220 , 79 ),make_pair( 221 , 64 ),make_pair( 222 , 29 ),make_pair( 223 , 62 ),make_pair( 224 , 80 ),make_pair( 81 , 25 ),make_pair( 82 , 26 ),make_pair( 83 , 27 ),make_pair( 84 , 28 ),make_pair( 85 , 29 ),make_pair( 86 , 30 ),make_pair( 87 , 31 ),make_pair( 88 , 32 ),make_pair( 89 , 33 ),make_pair( 90 , 34 ),make_pair( 91 , 35 ),make_pair( 92 , 36 ),make_pair( 93 , 37 ),make_pair( 94 , 38 ),make_pair( 95 , 39 ),make_pair( 96 , 40 ),make_pair( 97 , 41 ),make_pair( 98 , 42 ),make_pair( 99 , 43 ),make_pair( 100 , 44 ),make_pair( 101 , 45 ),make_pair( 102 , 46 ),make_pair( 103 , 47 ),make_pair( 104 , 48 ),make_pair( 105 , 49 ),make_pair( 106 , 50 ),make_pair( 107 , 51 ),make_pair( 108 , 52 ),make_pair( 109 , 53 ),make_pair( 110 , 54 ),make_pair( 111 , 55 ),make_pair( 112 , 56 ),make_pair( 113 , 57 ),make_pair( 114 , 58 ),make_pair( 115 , 59 ),make_pair( 116 , 60 ),make_pair( 117 , 61 ),make_pair( 118 , 62 ),make_pair( 119 , 63 ),make_pair( 120 , 64 ),make_pair( 121 , 25 ),make_pair( 122 , 26 ),make_pair( 123 , 27 ),make_pair( 124 , 28 ),make_pair( 125 , 29 ),make_pair( 126 , 30 ),make_pair( 127 , 31 ),make_pair( 128 , 32 ),make_pair( 129 , 33 ),make_pair( 130 , 34 ),make_pair( 131 , 35 ),make_pair( 132 , 36 ),make_pair( 133 , 37 ),make_pair( 134 , 38 ),make_pair( 135 , 39 ),make_pair( 136 , 40 ),make_pair( 137 , 41 ),make_pair( 138 , 42 ),make_pair( 139 , 43 ),make_pair( 140 , 44 ),make_pair( 141 , 45 ),make_pair( 142 , 46 ),make_pair( 143 , 47 ),make_pair( 144 , 48 ),make_pair( 145 , 49 ),make_pair( 146 , 50 ),make_pair( 147 , 51 ),make_pair( 148 , 52 ),make_pair( 149 , 53 ),make_pair( 150 , 54 ),make_pair( 151 , 55 ),make_pair( 152 , 56 ),make_pair( 153 , 57 ),make_pair( 154 , 58 ),make_pair( 155 , 59 ),make_pair( 156 , 60 ),make_pair( 157 , 61 ),make_pair( 158 , 62 ),make_pair( 159 , 63 ),make_pair( 160 , 64 ),make_pair( 161 , 65 ),make_pair( 162 , 65 ),make_pair( 163 , 65 ),make_pair( 164 , 27 ),make_pair( 165 , 66 ),make_pair( 166 , 66 ),make_pair( 167 , 66 ),make_pair( 168 , 33 ),make_pair( 169 , 67 ),make_pair( 170 , 67 ),make_pair( 171 , 67 ),make_pair( 172 , 46 ),make_pair( 173 , 68 ),make_pair( 174 , 68 ),make_pair( 175 , 68 ),make_pair( 176 , 43 ),make_pair( 177 , 69 ),make_pair( 178 , 69 ),make_pair( 179 , 69 ),make_pair( 180 , 49 ),make_pair( 181 , 70 ),make_pair( 182 , 70 ),make_pair( 183 , 70 ),make_pair( 184 , 50 ),make_pair( 185 , 71 ),make_pair( 186 , 71 ),make_pair( 187 , 71 ),make_pair( 188 , 39 ),make_pair( 189 , 72 ),make_pair( 190 , 72 ),make_pair( 191 , 72 ),make_pair( 192 , 53 ),make_pair( 193 , 73 ),make_pair( 194 , 73 ),make_pair( 195 , 73 ),make_pair( 196 , 54 ),make_pair( 197 , 74 ),make_pair( 198 , 74 ),make_pair( 199 , 74 ),make_pair( 200 , 45 ),make_pair( 201 , 75 ),make_pair( 202 , 75 ),make_pair( 203 , 75 ),make_pair( 204 , 57 ),make_pair( 205 , 76 ),make_pair( 206 , 76 ),make_pair( 207 , 76 ),make_pair( 208 , 58 ),make_pair( 209 , 77 ),make_pair( 210 , 77 ),make_pair( 211 , 77 ),make_pair( 212 , 34 ),make_pair( 213 , 78 ),make_pair( 214 , 78 ),make_pair( 215 , 78 ),make_pair( 216 , 61 ),make_pair( 217 , 79 ),make_pair( 218 , 79 ),make_pair( 219 , 79 ),make_pair( 220 , 62 ),make_pair( 221 , 80 ),make_pair( 222 , 80 ),make_pair( 223 , 80 ),make_pair( 224 , 31 ),make_pair( 225 , 86 ),make_pair( 225 , 164 ),make_pair( 225 , 161 ),make_pair( 83 , 225 ),make_pair( 226 , 94 ),make_pair( 226 , 168 ),make_pair( 226 , 165 ),make_pair( 89 , 226 ),make_pair( 227 , 103 ),make_pair( 227 , 172 ),make_pair( 227 , 169 ),make_pair( 102 , 227 ),make_pair( 228 , 104 ),make_pair( 228 , 176 ),make_pair( 228 , 173 ),make_pair( 99 , 228 ),make_pair( 229 , 138 ),make_pair( 229 , 180 ),make_pair( 229 , 177 ),make_pair( 105 , 229 ),make_pair( 230 , 147 ),make_pair( 230 , 184 ),make_pair( 230 , 181 ),make_pair( 146 , 230 ),make_pair( 231 , 148 ),make_pair( 231 , 188 ),make_pair( 231 , 185 ),make_pair( 135 , 231 ),make_pair( 232 , 122 ),make_pair( 232 , 192 ),make_pair( 232 , 189 ),make_pair( 109 , 232 ),make_pair( 233 , 151 ),make_pair( 233 , 196 ),make_pair( 233 , 193 ),make_pair( 150 , 233 ),make_pair( 234 , 152 ),make_pair( 234 , 200 ),make_pair( 234 , 197 ),make_pair( 141 , 234 ),make_pair( 235 , 131 ),make_pair( 235 , 204 ),make_pair( 235 , 201 ),make_pair( 113 , 235 ),make_pair( 236 , 155 ),make_pair( 236 , 208 ),make_pair( 236 , 205 ),make_pair( 154 , 236 ),make_pair( 237 , 156 ),make_pair( 237 , 212 ),make_pair( 237 , 209 ),make_pair( 130 , 237 ),make_pair( 238 , 132 ),make_pair( 238 , 216 ),make_pair( 238 , 213 ),make_pair( 117 , 238 ),make_pair( 239 , 159 ),make_pair( 239 , 220 ),make_pair( 239 , 217 ),make_pair( 158 , 239 ),make_pair( 240 , 160 ),make_pair( 240 , 224 ),make_pair( 240 , 221 ),make_pair( 127 , 240 ),make_pair( 241 , 126 ),make_pair( 241 , 163 ),make_pair( 241 , 105 ),make_pair( 161 , 241 ),make_pair( 242 , 163 ),make_pair( 242 , 108 ),make_pair( 242 , 145 ),make_pair( 162 , 242 ),make_pair( 243 , 164 ),make_pair( 243 , 148 ),make_pair( 243 , 162 ),make_pair( 123 , 243 ),make_pair( 244 , 134 ),make_pair( 244 , 167 ),make_pair( 244 , 109 ),make_pair( 165 , 244 ),make_pair( 245 , 167 ),make_pair( 245 , 112 ),make_pair( 245 , 149 ),make_pair( 166 , 245 ),make_pair( 246 , 168 ),make_pair( 246 , 152 ),make_pair( 246 , 166 ),make_pair( 129 , 246 ),make_pair( 247 , 143 ),make_pair( 247 , 171 ),make_pair( 247 , 113 ),make_pair( 169 , 247 ),make_pair( 248 , 171 ),make_pair( 248 , 116 ),make_pair( 248 , 153 ),make_pair( 170 , 248 ),make_pair( 249 , 172 ),make_pair( 249 , 156 ),make_pair( 249 , 170 ),make_pair( 142 , 249 ),make_pair( 250 , 144 ),make_pair( 250 , 175 ),make_pair( 250 , 117 ),make_pair( 173 , 250 ),make_pair( 251 , 175 ),make_pair( 251 , 120 ),make_pair( 251 , 157 ),make_pair( 174 , 251 ),make_pair( 252 , 176 ),make_pair( 252 , 160 ),make_pair( 252 , 174 ),make_pair( 139 , 252 ),make_pair( 253 , 98 ),make_pair( 253 , 179 ),make_pair( 253 , 89 ),make_pair( 177 , 253 ),make_pair( 254 , 179 ),make_pair( 254 , 107 ),make_pair( 254 , 129 ),make_pair( 178 , 254 ),make_pair( 255 , 180 ),make_pair( 255 , 147 ),make_pair( 255 , 178 ),make_pair( 145 , 255 ),make_pair( 256 , 107 ),make_pair( 256 , 183 ),make_pair( 256 , 141 ),make_pair( 181 , 256 ),make_pair( 257 , 183 ),make_pair( 257 , 92 ),make_pair( 257 , 101 ),make_pair( 182 , 257 ),make_pair( 258 , 184 ),make_pair( 258 , 132 ),make_pair( 258 , 182 ),make_pair( 106 , 258 ),make_pair( 259 , 108 ),make_pair( 259 , 187 ),make_pair( 259 , 146 ),make_pair( 185 , 259 ),make_pair( 260 , 187 ),make_pair( 260 , 144 ),make_pair( 260 , 106 ),make_pair( 186 , 260 ),make_pair( 261 , 188 ),make_pair( 261 , 104 ),make_pair( 261 , 186 ),make_pair( 95 , 261 ),make_pair( 262 , 82 ),make_pair( 262 , 191 ),make_pair( 262 , 88 ),make_pair( 189 , 262 ),make_pair( 263 , 191 ),make_pair( 263 , 111 ),make_pair( 263 , 128 ),make_pair( 190 , 263 ),make_pair( 264 , 192 ),make_pair( 264 , 151 ),make_pair( 264 , 190 ),make_pair( 149 , 264 ),make_pair( 265 , 111 ),make_pair( 265 , 195 ),make_pair( 265 , 140 ),make_pair( 193 , 265 ),make_pair( 266 , 195 ),make_pair( 266 , 91 ),make_pair( 266 , 100 ),make_pair( 194 , 266 ),make_pair( 267 , 196 ),make_pair( 267 , 131 ),make_pair( 267 , 194 ),make_pair( 110 , 267 ),make_pair( 268 , 112 ),make_pair( 268 , 199 ),make_pair( 268 , 150 ),make_pair( 197 , 268 ),make_pair( 269 , 199 ),make_pair( 269 , 143 ),make_pair( 269 , 110 ),make_pair( 198 , 269 ),make_pair( 270 , 200 ),make_pair( 270 , 103 ),make_pair( 270 , 198 ),make_pair( 101 , 270 ),make_pair( 271 , 91 ),make_pair( 271 , 203 ),make_pair( 271 , 96 ),make_pair( 201 , 271 ),make_pair( 272 , 203 ),make_pair( 272 , 115 ),make_pair( 272 , 136 ),make_pair( 202 , 272 ),make_pair( 273 , 204 ),make_pair( 273 , 155 ),make_pair( 273 , 202 ),make_pair( 153 , 273 ),make_pair( 274 , 115 ),make_pair( 274 , 207 ),make_pair( 274 , 124 ),make_pair( 205 , 274 ),make_pair( 275 , 207 ),make_pair( 275 , 81 ),make_pair( 275 , 84 ),make_pair( 206 , 275 ),make_pair( 276 , 208 ),make_pair( 276 , 121 ),make_pair( 276 , 206 ),make_pair( 114 , 276 ),make_pair( 277 , 116 ),make_pair( 277 , 211 ),make_pair( 277 , 154 ),make_pair( 209 , 277 ),make_pair( 278 , 211 ),make_pair( 278 , 133 ),make_pair( 278 , 114 ),make_pair( 210 , 278 ),make_pair( 279 , 212 ),make_pair( 279 , 93 ),make_pair( 279 , 210 ),make_pair( 90 , 279 ),make_pair( 280 , 92 ),make_pair( 280 , 215 ),make_pair( 280 , 102 ),make_pair( 213 , 280 ),make_pair( 281 , 215 ),make_pair( 281 , 119 ),make_pair( 281 , 142 ),make_pair( 214 , 281 ),make_pair( 282 , 216 ),make_pair( 282 , 159 ),make_pair( 282 , 214 ),make_pair( 157 , 282 ),make_pair( 283 , 119 ),make_pair( 283 , 219 ),make_pair( 283 , 130 ),make_pair( 217 , 283 ),make_pair( 284 , 219 ),make_pair( 284 , 97 ),make_pair( 284 , 90 ),make_pair( 218 , 284 ),make_pair( 285 , 220 ),make_pair( 285 , 137 ),make_pair( 285 , 218 ),make_pair( 118 , 285 ),make_pair( 286 , 120 ),make_pair( 286 , 223 ),make_pair( 286 , 158 ),make_pair( 221 , 286 ),make_pair( 287 , 223 ),make_pair( 287 , 125 ),make_pair( 287 , 118 ),make_pair( 222 , 287 ),make_pair( 288 , 224 ),make_pair( 288 , 85 ),make_pair( 288 , 222 ),make_pair( 87 , 288 ),make_pair( 86 , 83 ),make_pair( 94 , 89 ),make_pair( 103 , 102 ),make_pair( 104 , 99 ),make_pair( 138 , 105 ),make_pair( 230 , 21 ),make_pair( 148 , 135 ),make_pair( 122 , 109 ),make_pair( 151 , 150 ),make_pair( 234 , 17 ),make_pair( 131 , 113 ),make_pair( 236 , 23 ),make_pair( 156 , 130 ),make_pair( 238 , 20 ),make_pair( 159 , 158 ),make_pair( 160 , 127 ),make_pair( 126 , 161 ),make_pair( 242 , 65 ),make_pair( 164 , 123 ),make_pair( 134 , 165 ),make_pair( 167 , 166 ),make_pair( 246 , 33 ),make_pair( 247 , 47 ),make_pair( 248 , 67 ),make_pair( 172 , 142 ),make_pair( 250 , 48 ),make_pair( 251 , 68 ),make_pair( 176 , 139 ),make_pair( 98 , 177 ),make_pair( 179 , 178 ),make_pair( 255 , 49 ),make_pair( 107 , 181 ),make_pair( 257 , 70 ),make_pair( 184 , 106 ),make_pair( 259 , 52 ),make_pair( 187 , 186 ),make_pair( 188 , 95 ),make_pair( 82 , 189 ),make_pair( 191 , 190 ),make_pair( 192 , 149 ),make_pair( 111 , 193 ),make_pair( 195 , 194 ),make_pair( 267 , 54 ),make_pair( 112 , 197 ),make_pair( 269 , 74 ),make_pair( 200 , 101 ),make_pair( 91 , 201 ),make_pair( 203 , 202 ),make_pair( 204 , 153 ),make_pair( 274 , 59 ),make_pair( 275 , 76 ),make_pair( 276 , 58 ),make_pair( 116 , 209 ),make_pair( 211 , 210 ),make_pair( 212 , 90 ),make_pair( 92 , 213 ),make_pair( 215 , 214 ),make_pair( 282 , 61 ),make_pair( 283 , 63 ),make_pair( 284 , 79 ),make_pair( 220 , 118 ),make_pair( 120 , 221 ),make_pair( 223 , 222 ),make_pair( 224 , 87 ),make_pair( 30 , 225 ),make_pair( 161 , 164 ),make_pair( 225 , 27 ),make_pair( 38 , 226 ),make_pair( 66 , 226 ),make_pair( 168 , 89 ),make_pair( 47 , 227 ),make_pair( 169 , 172 ),make_pair( 227 , 46 ),make_pair( 173 , 104 ),make_pair( 68 , 228 ),make_pair( 228 , 43 ),make_pair( 42 , 229 ),make_pair( 69 , 229 ),make_pair( 180 , 105 ),make_pair( 51 , 230 ),make_pair( 70 , 230 ),make_pair( 230 , 50 ),make_pair( 52 , 231 ),make_pair( 185 , 188 ),make_pair( 231 , 39 ),make_pair( 26 , 232 ),make_pair( 189 , 192 ),make_pair( 232 , 53 ),make_pair( 55 , 233 ),make_pair( 73 , 233 ),make_pair( 196 , 150 ),make_pair( 197 , 152 ),make_pair( 197 , 200 ),make_pair( 234 , 45 ),make_pair( 35 , 235 ),make_pair( 201 , 204 ),make_pair( 235 , 57 ),make_pair( 205 , 155 ),make_pair( 76 , 236 ),make_pair( 208 , 154 ),make_pair( 60 , 237 ),make_pair( 209 , 212 ),make_pair( 237 , 34 ),make_pair( 36 , 238 ),make_pair( 213 , 216 ),make_pair( 216 , 117 ),make_pair( 217 , 159 ),make_pair( 79 , 239 ),make_pair( 239 , 62 ),make_pair( 64 , 240 ),make_pair( 221 , 224 ),make_pair( 240 , 31 ),make_pair( 14 , 241 ),make_pair( 49 , 241 ),make_pair( 241 , 65 ),make_pair( 145 , 163 ),make_pair( 21 , 242 ),make_pair( 108 , 162 ),make_pair( 65 , 243 ),make_pair( 162 , 148 ),make_pair( 243 , 11 ),make_pair( 10 , 244 ),make_pair( 109 , 167 ),make_pair( 244 , 66 ),make_pair( 53 , 245 ),make_pair( 149 , 112 ),make_pair( 245 , 56 ),make_pair( 166 , 168 ),make_pair( 56 , 246 ),make_pair( 152 , 129 ),make_pair( 19 , 247 ),make_pair( 113 , 171 ),make_pair( 171 , 169 ),make_pair( 57 , 248 ),make_pair( 153 , 116 ),make_pair( 116 , 170 ),make_pair( 67 , 249 ),make_pair( 170 , 156 ),make_pair( 156 , 142 ),make_pair( 117 , 144 ),make_pair( 61 , 250 ),make_pair( 175 , 173 ),make_pair( 157 , 175 ),make_pair( 157 , 120 ),make_pair( 251 , 64 ),make_pair( 174 , 176 ),make_pair( 174 , 160 ),make_pair( 252 , 15 ),make_pair( 5 , 253 ),make_pair( 89 , 179 ),make_pair( 253 , 69 ),make_pair( 33 , 254 ),make_pair( 129 , 107 ),make_pair( 254 , 51 ),make_pair( 178 , 180 ),make_pair( 51 , 255 ),make_pair( 147 , 145 ),make_pair( 17 , 256 ),make_pair( 45 , 256 ),make_pair( 183 , 181 ),make_pair( 101 , 183 ),make_pair( 8 , 257 ),make_pair( 92 , 182 ),make_pair( 70 , 258 ),make_pair( 182 , 132 ),make_pair( 258 , 20 ),make_pair( 146 , 108 ),make_pair( 146 , 187 ),make_pair( 259 , 71 ),make_pair( 50 , 260 ),make_pair( 106 , 144 ),make_pair( 260 , 48 ),make_pair( 71 , 261 ),make_pair( 186 , 104 ),make_pair( 261 , 6 ),make_pair( 3 , 262 ),make_pair( 88 , 191 ),make_pair( 262 , 72 ),make_pair( 32 , 263 ),make_pair( 128 , 111 ),make_pair( 263 , 55 ),make_pair( 72 , 264 ),make_pair( 190 , 151 ),make_pair( 264 , 22 ),make_pair( 16 , 265 ),make_pair( 140 , 195 ),make_pair( 265 , 73 ),make_pair( 44 , 266 ),make_pair( 100 , 91 ),make_pair( 266 , 35 ),make_pair( 194 , 196 ),make_pair( 35 , 267 ),make_pair( 131 , 110 ),make_pair( 22 , 268 ),make_pair( 54 , 268 ),make_pair( 199 , 197 ),make_pair( 110 , 199 ),make_pair( 19 , 269 ),make_pair( 143 , 198 ),make_pair( 74 , 270 ),make_pair( 198 , 103 ),make_pair( 270 , 8 ),make_pair( 7 , 271 ),make_pair( 96 , 203 ),make_pair( 271 , 75 ),make_pair( 40 , 272 ),make_pair( 136 , 115 ),make_pair( 272 , 59 ),make_pair( 75 , 273 ),make_pair( 202 , 155 ),make_pair( 273 , 23 ),make_pair( 12 , 274 ),make_pair( 124 , 207 ),make_pair( 207 , 205 ),make_pair( 28 , 275 ),make_pair( 84 , 81 ),make_pair( 275 , 25 ),make_pair( 206 , 208 ),make_pair( 25 , 276 ),make_pair( 121 , 114 ),make_pair( 154 , 116 ),make_pair( 58 , 277 ),make_pair( 277 , 77 ),make_pair( 114 , 211 ),make_pair( 9 , 278 ),make_pair( 278 , 37 ),make_pair( 77 , 279 ),make_pair( 210 , 93 ),make_pair( 279 , 4 ),make_pair( 8 , 280 ),make_pair( 102 , 215 ),make_pair( 280 , 78 ),make_pair( 46 , 281 ),make_pair( 18 , 281 ),make_pair( 119 , 214 ),make_pair( 78 , 282 ),make_pair( 63 , 282 ),make_pair( 282 , 24 ),make_pair( 130 , 119 ),make_pair( 34 , 283 ),make_pair( 219 , 217 ),make_pair( 90 , 219 ),make_pair( 90 , 97 ),make_pair( 284 , 41 ),make_pair( 218 , 220 ),make_pair( 218 , 137 ),make_pair( 285 , 13 ),make_pair( 24 , 286 ),make_pair( 158 , 223 ),make_pair( 286 , 80 ),make_pair( 62 , 287 ),make_pair( 118 , 125 ),make_pair( 287 , 29 ),make_pair( 80 , 288 ),make_pair( 222 , 85 ),make_pair( 288 , 0 )
	};

	ET t(points, edges);
	MergeTree<ET> mt(t);
	mt.Print();
	SplitTree<ET> st(t);
	st.Print();
	ContourTree< LinkCutTree<EdgeVertexRef, Statistic, true>, ET > ct(mt,st);
	ct.Print();

}

int main() {
	ALine();
	ASaddle();
	TwoTwo();
	TwoTwoEdge();
	Complex();
}
